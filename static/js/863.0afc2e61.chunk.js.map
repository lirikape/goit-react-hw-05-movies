{"version":3,"file":"static/js/863.0afc2e61.chunk.js","mappings":"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","sources":["pages/SelectedMovie/SelectedMovie.styled.js","components/images/noimage.svg","components/Button/Button.styled.js","components/Button/Button.jsx","pages/SelectedMovie/SelectedMovie.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport propTypes from 'prop-types';\n\nimport background from '../../components/images/background.jpeg';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: flex-start;\n  justify-content: space-between;\n  margin-bottom: 20px;\n\n  &::before {\n    content: '';\n    display: block;\n    background-color: rgb(255 255 255);\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n  }\n\n  &::after {\n    content: '';\n    position: fixed;\n    top: 0px;\n    left: -5px;\n    width: calc(100% + 10px);\n    height: calc(100vh + 10px);\n    background-image: ${props =>\n      props.$backdrop\n        ? `url('https://image.tmdb.org/t/p/w500/${props.$backdrop}')`\n        : `url(${background})`};\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n    filter: blur(5px);\n    z-index: -1;\n    opacity: 0.35;\n  }\n\n  @media screen and (max-width: 768px) {\n    padding: 0 5px;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  flex: 0 0 auto;\n  margin-right: 30px;\n`;\n\nexport const Image = styled.img`\n  max-height: 500px;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 10px;\n  align-self: flex-start;\n`;\n\nexport const Description = styled.div`\n  flex: 1 1 auto;\n`;\n\nexport const ProdCompany = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-top: 10px;\n`;\n\nContainer.propTypes = {\n  backdrop: propTypes.string,\n};\nexport const Links = styled(Link)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &:hover {\n    color: #064e8a;\n  }\n`;\n\nexport const WrapperLink = styled.div`\n  margin-bottom: 10px;\n`;\n","var _circle, _text, _text2, _text3, _text4;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgNoimage(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"300px\",\n    width: \"300px\",\n    viewBox: \"-300 -300 600 600\",\n    fontFamily: \"Bitstream Vera Sans,Liberation Sans, Arial, sans-serif\",\n    fontSize: 72,\n    textAnchor: \"middle\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    stroke: \"#AAA\",\n    strokeWidth: 10,\n    r: 280,\n    fill: \"#FFF\"\n  })), /*#__PURE__*/React.createElement(\"switch\", {\n    style: {\n      fill: \"#444\"\n    }\n  }, _text || (_text = /*#__PURE__*/React.createElement(\"text\", {\n    id: \"trsvg3-bn\",\n    systemLanguage: \"bn\"\n  }, /*#__PURE__*/React.createElement(\"tspan\", {\n    x: 0,\n    y: -8,\n    id: \"trsvg1-bn\"\n  }, \"&#x99B;&#x9AC;&#x9BF; &#x989;&#x9AA;&#x9B2;&#x9AD;&#x9CD;&#x9AF;\"), /*#__PURE__*/React.createElement(\"tspan\", {\n    x: 0,\n    y: 80,\n    id: \"trsvg2-bn\"\n  }, \"&#x9A8;&#x9DF;\"))), _text2 || (_text2 = /*#__PURE__*/React.createElement(\"text\", {\n    id: \"trsvg3-id\",\n    systemLanguage: \"id\"\n  }, /*#__PURE__*/React.createElement(\"tspan\", {\n    x: 0,\n    y: -8,\n    id: \"trsvg1-id\"\n  }, \"GAMBAR TAK\"), /*#__PURE__*/React.createElement(\"tspan\", {\n    x: 0,\n    y: 80,\n    id: \"trsvg2-id\"\n  }, \"TERSEDIA\"))), _text3 || (_text3 = /*#__PURE__*/React.createElement(\"text\", {\n    id: \"trsvg3-en\",\n    systemLanguage: \"en\"\n  }, /*#__PURE__*/React.createElement(\"tspan\", {\n    x: 0,\n    y: -8,\n    id: \"trsvg1-en\"\n  }, \"NO IMAGE\"), /*#__PURE__*/React.createElement(\"tspan\", {\n    x: 0,\n    y: 80,\n    id: \"trsvg2-en\"\n  }, \"AVAILABLE\"))), _text4 || (_text4 = /*#__PURE__*/React.createElement(\"text\", {\n    id: \"trsvg3\"\n  }, /*#__PURE__*/React.createElement(\"tspan\", {\n    x: 0,\n    y: -8,\n    id: \"trsvg1\"\n  }, \"NO IMAGE\"), /*#__PURE__*/React.createElement(\"tspan\", {\n    x: 0,\n    y: 80,\n    id: \"trsvg2\"\n  }, \"AVAILABLE\")))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNoimage);\nexport default __webpack_public_path__ + \"static/media/noimage.f837be333c9557a6a45ee352cf59c106.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  padding: 8px 16px;\n  margin: 0 16px 16px 0;\n  border: none;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  font-size: 16px;\n  background-color: #064e8a;\n  cursor: pointer;\n`;\n","import { Btn } from './Button.styled';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ text }) => {\n  return <Btn type=\"button\">{text}</Btn>;\n};\nexport default Button;\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import { useHttp } from 'hooks/useHttp'\nimport React, { useRef } from 'react'\nimport { fetchMovieById } from 'services/api'\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom'\nimport { Container, Description, Image, ImageContainer, Links, ProdCompany, WrapperLink } from 'pages/SelectedMovie/SelectedMovie.styled'\nimport noimage from 'components/images/noimage.svg';\nimport Button from 'components/Button/Button'\nimport { Suspense } from 'react'\nimport PropTypes from 'prop-types';\n\nconst SelectedMovie = () => {\n    const { movie_id } = useParams()\n    const location = useLocation()\n    const goBackRef = useRef(location.state?.from || '/')\n    const [movie] = useHttp(fetchMovieById, movie_id)\n    console.log(movie);\n    if (!movie) {\n        return <h2>Loading...</h2>\n    }\n    const productionCompaniesList = movie.production_companies?.map(\n        ({ id, logo_path, name }) =>\n            logo_path && (\n                <li key={id}>\n                    {logo_path && (\n                        <img\n                            src={`https://image.tmdb.org/t/p/w500${logo_path}`}\n                            alt={name}\n                            style={{\n                                maxHeight: 50,\n                                maxWidth: 200,\n                                marginRight: 30,\n                                marginTop: 10,\n                            }}\n                        />\n                    )}\n                </li>\n            )\n    );\n    const roundedPopularity = Math.round(movie.vote_average * 10);\n    return (\n        <div>\n            <WrapperLink>\n                <Links to={goBackRef.current}>⬅️ Go back</Links>\n            </WrapperLink>\n            {/* <h3>{movie.title}</h3>\n            <img src={movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                : `empty`} alt={movie.title} /> */}\n            <Container $backdrop={movie.backdrop_path}>\n                <Description>\n                    <h1>{movie.title}</h1>\n                    <h4>User score: {roundedPopularity}%</h4>\n                    <h2>Overview</h2>\n                    <p>{movie.overview}</p>\n                    <h2>Genres</h2>\n                    <p>\n                        {movie.genres.map(genre => (\n                            <span key={genre.id}> {genre.name}</span>\n                        ))}\n                    </p>\n                    {productionCompaniesList[0] !== null &&\n                        productionCompaniesList.length > 0 && (\n                            <>\n                                <h2>Production companies</h2>\n                                <ProdCompany>{productionCompaniesList}</ProdCompany>\n                            </>\n                        )}\n                </Description>\n                <ImageContainer>\n                    <Image\n                        src={\n                            movie.poster_path\n                                ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                                : `${noimage}`\n                        }\n                        alt={movie.title}\n                    />\n                </ImageContainer>\n            </Container>\n            <hr />\n            <div>\n                <h3>Additional information</h3>\n                <Link to=\"cast\">\n                    <Button text=\"Cast\" />\n                </Link>\n                <Link to=\"reviews\">\n                    <Button text=\"Reviews\" />\n                </Link>\n                <hr />\n            </div>\n            <div>\n                <Suspense fallback={<h1>loading....</h1>}>\n                    <Outlet />\n                </Suspense>\n            </div>\n        </div>\n    )\n}\n\nSelectedMovie.propTypes = {\n    location: PropTypes.object.isRequired,\n};\n\nexport default SelectedMovie"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","props","$backdrop","concat","background","ImageContainer","_templateObject2","Image","_templateObject3","Description","_templateObject4","ProdCompany","_templateObject5","propTypes","backdrop","Links","Link","_templateObject6","WrapperLink","_templateObject7","Btn","_ref","text","_jsx","type","children","_location$state","_movie$production_com","movie_id","useParams","location","useLocation","goBackRef","useRef","state","from","_useHttp","useHttp","fetchMovieById","movie","_slicedToArray","console","log","productionCompaniesList","production_companies","map","id","logo_path","name","src","alt","style","maxHeight","maxWidth","marginRight","marginTop","roundedPopularity","Math","round","vote_average","_jsxs","to","current","backdrop_path","title","overview","genres","genre","length","_Fragment","poster_path","noimage","Button","Suspense","fallback","Outlet"],"sourceRoot":""}